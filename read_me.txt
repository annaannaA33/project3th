Модуль 1: Основы программирования и информатики
Спринт 3: Промежуточное программирование на Python II
Часть 4: Интерактивный обучающий инструмент

Вам предстоит разработать и реализовать интерактивный обучающий инструмент, который позволит пользователям создавать, тренироваться и тестировать свои знания с использованием вопросов с выбором ответа и вопросов с текстовым ответом. Программа будет отслеживать статистику пользователя и предоставлять опции управления вопросами. Это будет программа, которую вы даже захотите использовать для своего собственного обучения!

Подобно практическому упражнению этого спринта, у вас будет немного больше свободы относительно того, как будет работать ваша программа - требования умышленно оставлены менее конкретными, чтобы дать вам возможность продумывать дизайн программ, а не только техническую реализацию.

Задачи, которые вам предстоит выполнить:

При запуске программы пользователь должен иметь возможность выбирать между следующими режимами:

Добавление вопросов.
Просмотр статистики.
Отключение/включение вопросов.
Режим практики.
Режим тестирования.
(Бонус) Выбор профиля.
Режим добавления вопросов:

Пользователи должны иметь возможность добавлять два типа вопросов: вопросы-викторины или вопросы с текстовым ответом.
Вопрос-викторина требует от пользователя выбор одного из предложенных вариантов ответа. Вопрос с текстовым ответом требует от пользователя ввода текста и сравнения его с ожидаемым ответом для определения правильности ответа (может быть на уровне сравнения сохраненной строки ответа и ответа, предоставленного пользователем).
Вопросы должны сохраняться в файле таким образом, чтобы после закрытия и повторного открытия программы вопросы оставались.
Пользователь не должен иметь возможность перейти в режимы практики или тестирования до тех пор, пока не будет добавлено как минимум 5 вопросов.

Режим просмотра статистики:
Программа должна выводить все вопросы, находящиеся в системе. Как минимум, каждый вопрос должен содержать: уникальный номер ID; активен ли вопрос; текст вопроса; количество раз, когда он отображался во время практики или тестирования; процент правильных ответов на данный вопрос.

Режим отключения/включения вопросов:
Пользователи должны иметь возможность вводить ID вопроса, который они хотят отключить или включить. Информация о вопросе (текст вопроса, ответ) должна отображаться, и пользователю следует предложить подтвердить свое решение отключить/включить его. Отключенные вопросы не должны появляться в режимах практики и тестирования. Состояние отключения/включения должно сохраняться в файле, так же, как и вопросы (выбор между использованием того же файла или другого на ваше усмотрение).

Режим практики:
Режим, в котором вопросы предоставляются беспрерывно, чтобы пользователь мог тренироваться. Однако вопросы выбираются таким образом, что вероятность появления вопросов, на которые пользователь правильно ответил, становится меньше, а вопросов, на которые был дан неверный ответ, - больше. Подсказка: вы можете изучить взвешенные случайные выборы. Вероятности не должны сбрасываться при перезапуске программы.

Режим тестирования:
Режим для проверки знаний пользователя. Сначала пользователь выбирает количество вопросов для теста, которое не превышает общее количество добавленных вопросов. Вопросы выбираются полностью случайным образом, и каждый вопрос может появиться в тесте только один раз. По окончании вопросов пользователю показывается результат. Список результатов должен сохраняться в отдельном файле results.txt - дата и время должны быть добавлены рядом с результатом.

(Бонус) Выбор профиля:
Это не повлияет на ваш итоговый балл, но вы можете попробовать реализовать это, если считаете, что основное задание было достаточно простым. Сделайте так, чтобы пользователи могли выбирать профиль. У каждого профиля должна быть индивидуальная статистика по тому, сколько раз вопрос был правильно отвечен, и, следовательно, индивидуальные вероятности появления этих вопросов в режиме практики. В режиме тестирования сохраненные результаты также должны указывать, какому профилю принадлежит каждый из результатов. Вопросы должны быть общими для всех профилей.
Также вы вольны вносить любые дополнительные улучшения в программу, которые, по вашему мнению, могли бы сделать ее более полезной для пользователя. Например, вы можете реализовать опцию "полного сброса", которая удаляет все вопросы.

Технические требования:
Используйте объектно-ориентированное программирование насколько это возможно. Попытайтесь разделить основные концепции на отдельные классы и использовать общие техники, такие как конструкторы, сеттеры, геттеры.
Используйте ввод/вывод в файл.
Напишите как минимум 3 модульных теста.
Предоставьте сгенерированные выходные файлы (для сохранения вопросов, результатов тестов и т. д.) в репозитории GitHub вместе с кодом.
В конце файла добавьте ссылку на общедоступный репозиторий GitHub, содержащий ваши работы по части 3. Если вы опережаете график обучения, у нас нет ожидания, что вы уже полностью выполнили это - однако начальный репозиторий должен быть доступен. Надеюсь, к моменту завершения этого спринта у вас также будет хотя бы одна сессия парного программирования.
Оценка проекта:

Пользователь может добавлять вопросы двух типов: викторины и с текстовым ответом.
Программа разумно использует ООП. Например, выбраны подходящие классы, могут использоваться функции-декораторы для геттеров/сеттеров.
Пользователь может просматривать статистику вопросов.
Пользователь может отключать/включать вопросы.
Режим практики работает правильно.
Режим тестирования работает правильно.
Качество кода. Насколько читаем и аккуратен код.
Удобство использования программы - насколько легко пользователю пользоваться программой.
В ходе проверки задачи вам могут задавать вопросы для проверки вашего понимания рассмотренных тем.
Примеры вопросов, которые рецензент может задать (рецензенту рекомендуется и ожидается придумывать дополнительные вопросы):

Каковы потенциальные преимущества использования объектно-ориентированного программирования?
Что такое файл .csv?
Какие наиболее распространенные команды Git?
Когда происходит конфликт слияния в Git?
Подача проекта:

Этот проект потребует одну самостоятельную и одну парную рецензии.

В целях практики работы с Git вам рекомендуется использовать командную строку для предоставления проекта в репозиторий Turing.

Примечание: репозиторий для этого проекта отличается от того, который вы использовали в прошлом проекте! Удостоверьтесь, что вы используете правильный, перейдя по значку GitHub на странице этого проекта. Подробное руководство по коррекциям доступно здесь: https://turingcollege.atlassian.net/wiki/spaces/DLG/pages/537395951/Peer+expert+reviews+corrections

Среднее время для выполнения: 25 часов.